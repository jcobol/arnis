use fnv::FnvHashMap;
use once_cell::sync::Lazy;
use std::sync::Mutex;

use crate::block_definitions::Block;
use crate::block_definitions::*;

/// Numeric identifier for the `AIR` block used inside block ID arrays.
pub const AIR_ID: u16 = 0;

struct Registry {
    blocks: Vec<Block>,
    ids: FnvHashMap<Block, u16>,
}

static REGISTRY: Lazy<Mutex<Registry>> = Lazy::new(|| {
    let blocks = vec![
        AIR,
        ACACIA_PLANKS,
        ANDESITE,
        BIRCH_LEAVES,
        BIRCH_LOG,
        BLACK_CONCRETE,
        BLACKSTONE,
        BLUE_FLOWER,
        BLUE_TERRACOTTA,
        BRICK,
        CAULDRON,
        CHISELED_STONE_BRICKS,
        COBBLESTONE_WALL,
        COBBLESTONE,
        POLISHED_BLACKSTONE_BRICKS,
        CRACKED_STONE_BRICKS,
        CRIMSON_PLANKS,
        CUT_SANDSTONE,
        CYAN_CONCRETE,
        DARK_OAK_PLANKS,
        DEEPSLATE_BRICKS,
        DIORITE,
        DIRT,
        END_STONE_BRICKS,
        FARMLAND,
        GLASS,
        GLOWSTONE,
        GRANITE,
        GRASS_BLOCK,
        GRASS,
        GRAVEL,
        GRAY_CONCRETE,
        GRAY_TERRACOTTA,
        GREEN_STAINED_HARDENED_CLAY,
        GREEN_WOOL,
        HAY_BALE,
        IRON_BARS,
        IRON_BLOCK,
        JUNGLE_PLANKS,
        LADDER,
        LIGHT_BLUE_CONCRETE,
        LIGHT_BLUE_TERRACOTTA,
        LIGHT_GRAY_CONCRETE,
        MOSS_BLOCK,
        MOSSY_COBBLESTONE,
        MUD_BRICKS,
        NETHER_BRICK,
        NETHERITE_BLOCK,
        OAK_FENCE,
        OAK_LEAVES,
        OAK_LOG,
        OAK_PLANKS,
        OAK_SLAB,
        ORANGE_TERRACOTTA,
        PODZOL,
        POLISHED_ANDESITE,
        POLISHED_BASALT,
        QUARTZ_BLOCK,
        POLISHED_BLACKSTONE,
        POLISHED_DEEPSLATE,
        POLISHED_DIORITE,
        POLISHED_GRANITE,
        PRISMARINE,
        PURPUR_BLOCK,
        PURPUR_PILLAR,
        QUARTZ_BRICKS,
        RAIL,
        RED_FLOWER,
        RED_NETHER_BRICK,
        RED_TERRACOTTA,
        RED_WOOL,
        SAND,
        SANDSTONE,
        SCAFFOLDING,
        SMOOTH_QUARTZ,
        SMOOTH_RED_SANDSTONE,
        SMOOTH_SANDSTONE,
        SMOOTH_STONE,
        SPONGE,
        SPRUCE_LOG,
        SPRUCE_PLANKS,
        STONE_BLOCK_SLAB,
        STONE_BRICK_SLAB,
        STONE_BRICKS,
        STONE,
        TERRACOTTA,
        WARPED_PLANKS,
        WATER,
        WHITE_CONCRETE,
        WHITE_FLOWER,
        WHITE_STAINED_GLASS,
        WHITE_TERRACOTTA,
        WHITE_WOOL,
        YELLOW_CONCRETE,
        YELLOW_FLOWER,
        YELLOW_WOOL,
        LIME_CONCRETE,
        CYAN_WOOL,
        BLUE_CONCRETE,
        PURPLE_CONCRETE,
        RED_CONCRETE,
        MAGENTA_CONCRETE,
        BROWN_WOOL,
        OXIDIZED_COPPER,
        YELLOW_TERRACOTTA,
        SNOW_BLOCK,
        SNOW_LAYER,
        SIGN,
        ANDESITE_WALL,
        STONE_BRICK_WALL,
        CARROTS,
        DARK_OAK_DOOR_LOWER,
        DARK_OAK_DOOR_UPPER,
        POTATOES,
        WHEAT,
        BEDROCK,
        RAIL_NORTH_SOUTH,
        RAIL_EAST_WEST,
        RAIL_ASCENDING_EAST,
        RAIL_ASCENDING_WEST,
        RAIL_ASCENDING_NORTH,
        RAIL_ASCENDING_SOUTH,
        RAIL_NORTH_EAST,
        RAIL_NORTH_WEST,
        RAIL_SOUTH_EAST,
        RAIL_SOUTH_WEST,
        COARSE_DIRT,
        IRON_ORE,
        COAL_ORE,
        GOLD_ORE,
        COPPER_ORE,
        CLAY,
        DIRT_PATH,
        ICE,
        PACKED_ICE,
        MUD,
        DEAD_BUSH,
        TALL_GRASS_BOTTOM,
        TALL_GRASS_TOP,
        CRAFTING_TABLE,
        FURNACE,
        WHITE_CARPET,
        BOOKSHELF,
        OAK_PRESSURE_PLATE,
        OAK_STAIRS,
        CHEST,
        RED_CARPET,
        ANVIL,
        NOTE_BLOCK,
        OAK_DOOR,
        BREWING_STAND,
        RED_BED_NORTH_HEAD,
        RED_BED_NORTH_FOOT,
        RED_BED_EAST_HEAD,
        RED_BED_EAST_FOOT,
        RED_BED_SOUTH_HEAD,
        RED_BED_SOUTH_FOOT,
        RED_BED_WEST_HEAD,
        RED_BED_WEST_FOOT,
        GRAY_STAINED_GLASS,
        LIGHT_GRAY_STAINED_GLASS,
        BROWN_STAINED_GLASS,
        TINTED_GLASS,
        OAK_TRAPDOOR,
        BROWN_CONCRETE,
        BLACK_TERRACOTTA,
        BROWN_TERRACOTTA,
        STONE_BRICK_STAIRS,
        MUD_BRICK_STAIRS,
        POLISHED_BLACKSTONE_BRICK_STAIRS,
        BRICK_STAIRS,
        POLISHED_GRANITE_STAIRS,
        END_STONE_BRICK_STAIRS,
        POLISHED_DIORITE_STAIRS,
        SMOOTH_SANDSTONE_STAIRS,
        QUARTZ_STAIRS,
        POLISHED_ANDESITE_STAIRS,
        NETHER_BRICK_STAIRS,
    ];
    let mut ids = FnvHashMap::default();
    for (id, block) in blocks.iter().copied().enumerate() {
        ids.insert(block, id as u16);
    }
    Mutex::new(Registry { blocks, ids })
});

pub fn id(block: Block) -> u16 {
    let mut registry = REGISTRY.lock().unwrap();
    if let Some(&id) = registry.ids.get(&block) {
        id
    } else {
        let id = registry.blocks.len() as u16;
        registry.blocks.push(block);
        registry.ids.insert(block, id);
        id
    }
}

pub fn block(id: u16) -> Block {
    let registry = REGISTRY.lock().unwrap();
    registry
        .blocks
        .get(id as usize)
        .copied()
        .expect("block id out of range")
}
